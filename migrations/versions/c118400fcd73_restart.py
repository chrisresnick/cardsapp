"""restart

Revision ID: c118400fcd73
Revises: 
Create Date: 2021-01-12 13:03:22.803017

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c118400fcd73'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('ownerId', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['ownerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_classes_key'), 'classes', ['key'], unique=True)
    op.create_table('decks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('classId', sa.Integer(), nullable=True),
    sa.Column('ownerId', sa.Integer(), nullable=False),
    sa.Column('shareType', sa.Enum('private', 'public', 'shared', name='shareOption'), nullable=True),
    sa.Column('readOnly', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['classId'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['ownerId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enrollment_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('classId', sa.Integer(), nullable=True),
    sa.Column('studentId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classId'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['studentId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('enrollments',
    sa.Column('studentId', sa.Integer(), nullable=True),
    sa.Column('classId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classId'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['studentId'], ['users.id'], )
    )
    op.create_table('cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('deckId', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.Column('nextShow', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['deckId'], ['decks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('forUserId', sa.Integer(), nullable=True),
    sa.Column('forRequestId', sa.Integer(), nullable=True),
    sa.Column('forDeckId', sa.Integer(), nullable=True),
    sa.Column('noteType', sa.Enum('request', 'approve', 'deny', 'deck', name='noteType'), nullable=True),
    sa.Column('seen', sa.Boolean(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['forDeckId'], ['decks.id'], ),
    sa.ForeignKeyConstraint(['forRequestId'], ['enrollment_requests.id'], ),
    sa.ForeignKeyConstraint(['forUserId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_forUserId'), 'notifications', ['forUserId'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notifications_forUserId'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_table('cards')
    op.drop_table('enrollments')
    op.drop_table('enrollment_requests')
    op.drop_table('decks')
    op.drop_index(op.f('ix_classes_key'), table_name='classes')
    op.drop_table('classes')
    op.drop_table('users')
    # ### end Alembic commands ###
